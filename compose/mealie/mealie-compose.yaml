# ----------------------------------------------------------------------------------------
# Mealie is an intuitive and easy to use recipe management app!
# It allows easily importing recipes into the app from various web sources and OCR.
# Furthermore, the recipes can be added to a meal plan and then exported directly
# to shopping lists, which has become my #1 method for meal planning and grocery shopping.
# It also has a fairly well-maintained PWA, which makes mobile usage well-integrated.
# ----------------------------------------------------------------------------------------

secrets:
  POSTGRES_USER:
    file: ${SECRETS_DIR}/mealie_postgres_user
  POSTGRES_PASSWORD:
    file: ${SECRETS_DIR}/mealie_postgres_password
  SMTP_PASSWORD:
    file: ${SECRETS_DIR}/mealie_gmail_password
  OPENAI_API_KEY:
    file: ${SECRETS_DIR}/mealie_openai_api_key

services:
  mealie:
    # mealie advises against using the latest tag
    # however, I like new features/bug fixes and I know how to debug
    # image: ghcr.io/mealie-recipes/mealie:latest
    image: mealie-pwa-theme-fix:3.2.1
    build:
      # there's a bug that causes the PWA theme-color to not be respected:
      # https://github.com/mealie-recipes/mealie/issues/4563
      # in order to resolve it, I build my own custom image to use (until it's resolved)
      context: ${COMPOSE_DIR}/mealie/mealie_source
      dockerfile: ${COMPOSE_DIR}/mealie/mealie_source/docker/Dockerfile
    container_name: mealie
    labels: # watchtower can't build images, so we'll ignore it
      - "com.centurylinklabs.watchtower.enable=false" # TODO: remove when issue is resolved
    hostname: mealie
    # "Setting an explicit memory limit is recommended ... will improve idle performance"
    mem_limit: 4g
    cpu_shares: 1024
    read_only: false
    expose:
      - 9000
    depends_on:
      mealie-postgres-db:
        condition: service_healthy
    volumes:
      - mealie_data:/app/data/:rw
    environment:
      ALLOW_SIGNUP: false # prevents uninvited signup
      PUID: 123
      PGID: 124
      TZ: America/New_York
      BASE_URL: https://mealie.mattdies.com
      # database settings
      DB_ENGINE: postgres
      POSTGRES_USER_FILE: /run/secrets/POSTGRES_USER
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
      POSTGRES_SERVER: mealie-postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: mealie
      # email/SMTP settings
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_FROM_NAME: mealie
      SMTP_AUTH_STRATEGY: TLS
      SMTP_FROM_EMAIL: ${GMAIL}
      SMTP_USER: ${GMAIL}
      SMTP_PASSWORD_FILE: /run/secrets/SMTP_PASSWORD
      # visual settings
      THEME_LIGHT_PRIMARY: 525E3C
      THEME_DARK_PRIMARY: 525E3C
      # OpenAI integration
      OPENAI_API_KEY_FILE: /run/secrets/OPENAI_API_KEY
      OPENAI_MODEL: gpt-4o-mini # upgrade to gpt-4o if needed
    secrets:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - SMTP_PASSWORD
      - OPENAI_API_KEY
    security_opt:
      - no-new-privileges:true
    networks:
      webapps:
        ipv4_address: 172.19.0.6
      mealie_network:
    restart: unless-stopped

  mealie-postgres-db:
    image: postgres:17
    container_name: mealie-postgres
    hostname: mealie-postgres
    mem_limit: 1g
    cpu_shares: 768
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "/pg_healthcheck.sh"]
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
      - mealie_postgres:/var/lib/postgresql/data:rw
      - ${COMPOSE_DIR}/mealie/pg_healthcheck.sh:/pg_healthcheck.sh
    secrets:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    environment:
      POSTGRES_DB: mealie
      POSTGRES_USER_FILE: /run/secrets/POSTGRES_USER
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
    networks:
      - mealie_network
    restart: unless-stopped

volumes:
  mealie_data:
  mealie_postgres:

networks:
  webapps:
    external: true
  mealie_network:
    driver: bridge
